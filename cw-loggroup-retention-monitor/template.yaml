AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Metadata:
  AWS::ServerlessRepo::Application:
    Name: cw-loggroup-retention-monitor
    Description: |
      Monitors CloudWatch log group retention compliance. Fixes AWS default rule that incorrectly marks infinite retention as compliant. Checks log groups against minimum retention requirements without modifying them.
    Author: AWS Config Community
    SpdxLicenseId: MIT
    LicenseUrl: LICENSE
    ReadmeUrl: README.md
    HomePageUrl: https://github.com/zsoftly/aws-config-rules
    SemanticVersion: 1.0.0
    SourceCodeUrl: https://github.com/zsoftly/aws-config-rules
    Labels: ['config', 'cloudwatch', 'logs', 'retention', 'compliance', 'cost-optimization']

Parameters:
  MinimumRetentionDays:
    Type: Number
    Default: 1
    MinValue: 1
    MaxValue: 3653
    Description: |
      Minimum retention period for CloudWatch log groups in days. 
      Log groups with infinite retention (null) or less than this value will be marked as NON_COMPLIANT.
      Valid values: 1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, 3653
  
  ConfigRuleName:
    Type: String
    Default: cw-log-retention-min
    MinLength: 1
    MaxLength: 64
    Description: Name for the AWS Config rule (must contain 'retention')
    AllowedPattern: '.*retention.*'
    ConstraintDescription: Must contain the word 'retention' (case-insensitive)
  
  LambdaLogRetentionDays:
    Type: Number
    Default: 7
    MinValue: 1
    MaxValue: 3653
    Description: |
      Retention period for Lambda function logs in days. 
      Valid values: 1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, 3653

Resources:
  # Lambda Execution Role
  ConfigRuleLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: LogsDescribePermissions
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:DescribeLogGroups
                Resource: '*'
              - Effect: Allow
                Action:
                  - config:PutEvaluations
                Resource: '*'

  # Lambda Log Group (pre-created with retention)
  ConfigRuleLambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/${ConfigRuleName}-function'
      RetentionInDays: !Ref LambdaLogRetentionDays

  # Lambda Function
  ConfigRuleFunction:
    Type: AWS::Serverless::Function
    DependsOn: ConfigRuleLambdaLogGroup
    Properties:
      FunctionName: !Sub '${ConfigRuleName}-function'
      CodeUri: src/
      Handler: lambda_function.lambda_handler
      Runtime: python3.12
      Timeout: 300
      MemorySize: 256
      Role: !GetAtt ConfigRuleLambdaRole.Arn
      Environment:
        Variables:
          REQUIRED_RETENTION_DAYS: !Ref MinimumRetentionDays
      Description: !Sub 'AWS Config rule function for ${ConfigRuleName}'

  # Config Rule
  LogRetentionConfigRule:
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: !Ref ConfigRuleName
      Description: !Sub |
        Monitors CloudWatch log groups for minimum ${MinimumRetentionDays} days retention compliance. 
        Reports log groups as NON_COMPLIANT if they have infinite retention (null) or retention below the minimum. Does not modify log groups.
      Source:
        Owner: CUSTOM_LAMBDA
        SourceIdentifier: !GetAtt ConfigRuleFunction.Arn
        SourceDetails:
          - EventSource: aws.config
            MessageType: ScheduledNotification
            MaximumExecutionFrequency: TwentyFour_Hours
      InputParameters: !Sub |
        {
          "MinimumRetentionDays": "${MinimumRetentionDays}"
        }

  # Permission for Config to invoke Lambda
  ConfigRuleInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref ConfigRuleFunction
      Action: lambda:InvokeFunction
      Principal: config.amazonaws.com
      SourceAccount: !Ref 'AWS::AccountId'

Outputs:
  ConfigRuleName:
    Description: Name of the deployed Config rule
    Value: !Ref LogRetentionConfigRule
    Export:
      Name: !Sub '${AWS::StackName}-ConfigRuleName'

  ConfigRuleArn:
    Description: ARN of the deployed Config rule
    Value: !Sub 
      - 'arn:aws:config:${AWS::Region}:${AWS::AccountId}:config-rule/${ConfigRuleId}'
      - ConfigRuleId: !Ref LogRetentionConfigRule
    Export:
      Name: !Sub '${AWS::StackName}-ConfigRuleArn'

  LambdaFunctionName:
    Description: Name of the Lambda function
    Value: !Ref ConfigRuleFunction
    Export:
      Name: !Sub '${AWS::StackName}-LambdaFunctionName'

  ConsoleUrl:
    Description: Direct link to view the Config rule in AWS Console
    Value: !Sub 'https://${AWS::Region}.console.aws.amazon.com/config/home?region=${AWS::Region}#/rules/details?configRuleName=${ConfigRuleName}'

  MinimumRetentionDays:
    Description: Configured minimum retention period requirement
    Value: !Ref MinimumRetentionDays
    Export:
      Name: !Sub '${AWS::StackName}-MinimumRetentionDays'

  LambdaLogGroupName:
    Description: Name of the Lambda function's log group
    Value: !Ref ConfigRuleLambdaLogGroup
    Export:
      Name: !Sub '${AWS::StackName}-LambdaLogGroupName'

  LambdaLogRetentionDays:
    Description: Retention period for Lambda function logs
    Value: !Ref LambdaLogRetentionDays
    Export:
      Name: !Sub '${AWS::StackName}-LambdaLogRetentionDays'