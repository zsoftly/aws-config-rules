name: CI & Security

on:
  push:
    branches: [ main, 'feature/*', 'feat/*', 'issue/*', 'release/*' ]
  pull_request:
    branches: [ main, 'feature/*', 'feat/*', 'issue/*', 'release/*' ]

jobs:
  lint-and-security:
    name: Lint & Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install flake8 bandit
          
      - name: Lint with flake8
        run: |
          # Stop build if syntax errors or undefined names
          flake8 cw-lg-retention-monitor/src/ --count --select=E9,F63,F7,F82 --show-source --statistics
          # Check for other issues (warnings only)
          flake8 cw-lg-retention-monitor/src/ --count --max-complexity=10 --max-line-length=120 --statistics || true
          
      - name: Security scan with Bandit
        run: |
          bandit -r cw-lg-retention-monitor/src/ -f json -o bandit-report.json || true
          bandit -r cw-lg-retention-monitor/src/ --exit-zero
          
      - name: Upload Bandit report
        uses: actions/upload-artifact@v4
        with:
          name: bandit-report
          path: bandit-report.json
        if: always()

  sam-validation:
    name: SAM Template Validation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up SAM CLI
        uses: aws-actions/setup-sam@v2
        with:
          use-installer: true
          
      - name: Validate SAM template
        run: |
          cd cw-lg-retention-monitor
          sam validate
          sam validate --lint

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r cw-lg-retention-monitor/tests/requirements.txt
          if [ -f cw-lg-retention-monitor/src/requirements.txt ]; then pip install -r cw-lg-retention-monitor/src/requirements.txt; fi
          
      - name: Run unit tests
        run: |
          # Run tests with coverage
          cd cw-lg-retention-monitor
          pytest tests/ -v --cov=src --cov-report=term-missing --cov-report=xml --tb=short
          
      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: cw-lg-retention-monitor/coverage.xml
        if: always()